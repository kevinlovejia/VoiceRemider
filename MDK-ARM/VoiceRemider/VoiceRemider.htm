<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\VoiceRemider\VoiceRemider.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\VoiceRemider\VoiceRemider.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Tue Aug 30 00:08:49 2022
<BR><P>
<H3>Maximum Stack Usage =        392 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
itemLoader &rArr; showWeekStr &rArr; setMenuOption &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[21]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">ADC1_2_IRQHandler</a><BR>
 <LI><a href="#[9]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">BusFault_Handler</a><BR>
 <LI><a href="#[7]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">HardFault_Handler</a><BR>
 <LI><a href="#[8]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">MemManage_Handler</a><BR>
 <LI><a href="#[6]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">NMI_Handler</a><BR>
 <LI><a href="#[a]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">UsageFault_Handler</a><BR>
 <LI><a href="#[10c]">console_log</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10c]">console_log</a><BR>
 <LI><a href="#[146]">next</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[146]">next</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[21]">ADC1_2_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[9]">BusFault_Handler</a> from stm32f1xx_it.o(i.BusFault_Handler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[24]">CAN1_RX1_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[25]">CAN1_SCE_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel1_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel2_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[1c]">DMA1_Channel3_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[1d]">DMA1_Channel4_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[1e]">DMA1_Channel5_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[1f]">DMA1_Channel6_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[20]">DMA1_Channel7_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[c]">DebugMon_Handler</a> from stm32f1xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[15]">EXTI0_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[37]">EXTI15_10_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[16]">EXTI1_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[17]">EXTI2_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[18]">EXTI3_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[19]">EXTI4_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[26]">EXTI9_5_IRQHandler</a> from stm32f1xx_it.o(i.EXTI9_5_IRQHandler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[13]">FLASH_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from stm32f1xx_it.o(i.HardFault_Handler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[2f]">I2C1_ER_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[2e]">I2C1_EV_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[31]">I2C2_ER_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[30]">I2C2_EV_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[8]">MemManage_Handler</a> from stm32f1xx_it.o(i.MemManage_Handler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from stm32f1xx_it.o(i.NMI_Handler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[10]">PVD_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[d]">PendSV_Handler</a> from stm32f1xx_it.o(i.PendSV_Handler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[14]">RCC_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[38]">RTC_Alarm_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[12]">RTC_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[32]">SPI1_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[33]">SPI2_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[b]">SVC_Handler</a> from stm32f1xx_it.o(i.SVC_Handler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[e]">SysTick_Handler</a> from stm32f1xx_it.o(i.SysTick_Handler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[3b]">SystemInit</a> from system_stm32f1xx.o(i.SystemInit) referenced from startup_stm32f103xb.o(.text)
 <LI><a href="#[11]">TAMPER_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[27]">TIM1_BRK_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[2a]">TIM1_CC_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[29]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[28]">TIM1_UP_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[2b]">TIM2_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[2c]">TIM3_IRQHandler</a> from stm32f1xx_it.o(i.TIM3_IRQHandler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[2d]">TIM4_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[34]">USART1_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[35]">USART2_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[36]">USART3_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[39]">USBWakeUp_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[22]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[23]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[a]">UsageFault_Handler</a> from stm32f1xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[f]">WWDG_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)
 <LI><a href="#[3c]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f103xb.o(.text)
 <LI><a href="#[3d]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[3d]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0vsprintf)
 <LI><a href="#[3e]">back</a> from menu.o(i.back) referenced from menu.o(i.addBackOption)
 <LI><a href="#[7a]">draw</a> from normal.o(i.draw) referenced from normal.o(i.watchface_normal)
 <LI><a href="#[3f]">itemLoader</a> from mode_couple.o(i.itemLoader) referenced 3 times from mode_couple.o(i.beginSelect)
 <LI><a href="#[3f]">itemLoader</a> from mode_couple.o(i.itemLoader) referenced 4 times from mode_couple.o(i.endSelect)
 <LI><a href="#[69]">itemLoader</a> from m_main.o(i.itemLoader) referenced from m_main.o(i.mOpen)
 <LI><a href="#[6b]">itemLoader</a> from sound.o(i.itemLoader) referenced from sound.o(i.mSoundOpen)
 <LI><a href="#[49]">itemLoader</a> from timedate.o(i.itemLoader) referenced from timedate.o(i.mTimeDateOpen)
 <LI><a href="#[3f]">itemLoader</a> from mode_couple.o(i.itemLoader) referenced from mode_couple.o(i.modeCoupleSelect)
 <LI><a href="#[44]">itemLoader</a> from mode_oddeve.o(i.itemLoader) referenced from mode_oddeve.o(i.modeOddevenSelect)
 <LI><a href="#[6f]">itemLoader</a> from mode.o(i.itemLoader) referenced from mode.o(i.mode_select)
 <LI><a href="#[52]">itemLoader</a> from tailnum.o(i.itemLoader) referenced from tailnum.o(i.selectTailNum)
 <LI><a href="#[52]">itemLoader</a> from tailnum.o(i.itemLoader) referenced from tailnum.o(i.tailnum_select)
 <LI><a href="#[4f]">mDown</a> from mode_couple.o(i.mDown) referenced 3 times from mode_couple.o(i.endSelect)
 <LI><a href="#[57]">mDown</a> from timedate.o(i.mDown) referenced from timedate.o(i.mTimeDateOpen)
 <LI><a href="#[4f]">mDown</a> from mode_couple.o(i.mDown) referenced from mode_couple.o(i.modeCoupleSelect)
 <LI><a href="#[51]">mDown</a> from mode_oddeve.o(i.mDown) referenced from mode_oddeve.o(i.modeOddevenSelect)
 <LI><a href="#[65]">mOpen</a> from m_main.o(i.mOpen) referenced from m_main.o(i.mMainOpen)
 <LI><a href="#[65]">mOpen</a> from m_main.o(i.mOpen) referenced from m_main.o(i.mOpen)
 <LI><a href="#[41]">mSelect</a> from mode_couple.o(i.mSelect) referenced 3 times from mode_couple.o(i.beginSelect)
 <LI><a href="#[41]">mSelect</a> from mode_couple.o(i.mSelect) referenced 4 times from mode_couple.o(i.endSelect)
 <LI><a href="#[6a]">mSelect</a> from m_main.o(i.mSelect) referenced from m_main.o(i.mOpen)
 <LI><a href="#[6c]">mSelect</a> from sound.o(i.mSelect) referenced from sound.o(i.mSoundOpen)
 <LI><a href="#[4b]">mSelect</a> from timedate.o(i.mSelect) referenced from timedate.o(i.mTimeDateOpen)
 <LI><a href="#[41]">mSelect</a> from mode_couple.o(i.mSelect) referenced from mode_couple.o(i.modeCoupleSelect)
 <LI><a href="#[46]">mSelect</a> from mode_oddeve.o(i.mSelect) referenced from mode_oddeve.o(i.modeOddevenSelect)
 <LI><a href="#[70]">mSelect</a> from mode.o(i.mSelect) referenced from mode.o(i.mode_select)
 <LI><a href="#[54]">mSelect</a> from tailnum.o(i.mSelect) referenced from tailnum.o(i.selectTailNum)
 <LI><a href="#[54]">mSelect</a> from tailnum.o(i.mSelect) referenced from tailnum.o(i.tailnum_select)
 <LI><a href="#[5f]">mSoundOpen</a> from sound.o(i.mSoundOpen) referenced from m_main.o(i.itemLoader)
 <LI><a href="#[5f]">mSoundOpen</a> from sound.o(i.mSoundOpen) referenced from sound.o(i.mSoundOpen)
 <LI><a href="#[5e]">mTimeDateOpen</a> from timedate.o(i.mTimeDateOpen) referenced from m_main.o(i.itemLoader)
 <LI><a href="#[5e]">mTimeDateOpen</a> from timedate.o(i.mTimeDateOpen) referenced from timedate.o(i.mTimeDateOpen)
 <LI><a href="#[4e]">mUp</a> from mode_couple.o(i.mUp) referenced 3 times from mode_couple.o(i.endSelect)
 <LI><a href="#[56]">mUp</a> from timedate.o(i.mUp) referenced from timedate.o(i.mTimeDateOpen)
 <LI><a href="#[4e]">mUp</a> from mode_couple.o(i.mUp) referenced from mode_couple.o(i.modeCoupleSelect)
 <LI><a href="#[50]">mUp</a> from mode_oddeve.o(i.mUp) referenced from mode_oddeve.o(i.modeOddevenSelect)
 <LI><a href="#[3a]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[60]">menu_close</a> from menu.o(i.menu_close) referenced from m_main.o(i.itemLoader)
 <LI><a href="#[67]">menu_down</a> from menu.o(i.menu_down) referenced from m_main.o(i.mOpen)
 <LI><a href="#[66]">menu_draw</a> from menu.o(i.menu_draw) referenced from m_main.o(i.mOpen)
 <LI><a href="#[64]">menu_select</a> from menu.o(i.menu_select) referenced from m_main.o(i.mMainOpen)
 <LI><a href="#[64]">menu_select</a> from menu.o(i.menu_select) referenced from m_main.o(i.mOpen)
 <LI><a href="#[64]">menu_select</a> from menu.o(i.menu_select) referenced from normal.o(i.watchface_normal)
 <LI><a href="#[68]">menu_up</a> from menu.o(i.menu_up) referenced from m_main.o(i.mOpen)
 <LI><a href="#[143]">modeCoupleSelect</a> from mode_couple.o(i.modeCoupleSelect) referenced from mode_couple.o(i.modeCoupleSelect)
 <LI><a href="#[145]">modeOddevenSelect</a> from mode_oddeve.o(i.modeOddevenSelect) referenced from mode_oddeve.o(i.modeOddevenSelect)
 <LI><a href="#[5d]">mode_select</a> from mode.o(i.mode_select) referenced from m_main.o(i.itemLoader)
 <LI><a href="#[5d]">mode_select</a> from mode.o(i.mode_select) referenced from mode.o(i.mode_select)
 <LI><a href="#[55]">nextOption</a> from menu.o(i.nextOption) referenced from tailnum.o(i.endSelect)
 <LI><a href="#[55]">nextOption</a> from menu.o(i.nextOption) referenced from m_main.o(i.mOpen)
 <LI><a href="#[55]">nextOption</a> from menu.o(i.nextOption) referenced from sound.o(i.mSoundOpen)
 <LI><a href="#[55]">nextOption</a> from menu.o(i.nextOption) referenced from mode.o(i.mode_select)
 <LI><a href="#[55]">nextOption</a> from menu.o(i.nextOption) referenced from tailnum.o(i.tailnum_select)
 <LI><a href="#[48]">oddEvenNumDraw</a> from mode_oddeve.o(i.oddEvenNumDraw) referenced from mode_oddeve.o(i.beginSelect)
 <LI><a href="#[45]">paramDataDown</a> from mode_oddeve.o(i.paramDataDown) referenced from mode_oddeve.o(i.beginSelect)
 <LI><a href="#[47]">paramDataUp</a> from mode_oddeve.o(i.paramDataUp) referenced from mode_oddeve.o(i.beginSelect)
 <LI><a href="#[53]">prevOption</a> from menu.o(i.prevOption) referenced from tailnum.o(i.endSelect)
 <LI><a href="#[53]">prevOption</a> from menu.o(i.prevOption) referenced from m_main.o(i.mOpen)
 <LI><a href="#[53]">prevOption</a> from menu.o(i.prevOption) referenced from sound.o(i.mSoundOpen)
 <LI><a href="#[53]">prevOption</a> from menu.o(i.prevOption) referenced from mode.o(i.mode_select)
 <LI><a href="#[53]">prevOption</a> from menu.o(i.prevOption) referenced from tailnum.o(i.tailnum_select)
 <LI><a href="#[63]">saveTimeDate</a> from timedate.o(i.saveTimeDate) referenced from timedate.o(i.itemLoader)
 <LI><a href="#[58]">selectCouple</a> from mode.o(i.selectCouple) referenced from mode.o(i.itemLoader)
 <LI><a href="#[5a]">selectCoupleLoop</a> from mode.o(i.selectCoupleLoop) referenced from mode.o(i.itemLoader)
 <LI><a href="#[61]">selectDate</a> from timedate.o(i.selectDate) referenced from timedate.o(i.itemLoader)
 <LI><a href="#[78]">selectDaysleftNum</a> from mode_oddeve.o(i.selectDaysleftNum) referenced from mode_oddeve.o(i.showDaysleftStr)
 <LI><a href="#[4]">selectFridayNum</a> from mode_couple.o(i.selectFridayNum) referenced 2 times from mode_couple.o(.data)
 <LI><a href="#[0]">selectMondayNum</a> from mode_couple.o(i.selectMondayNum) referenced 2 times from mode_couple.o(.data)
 <LI><a href="#[79]">selectOddEvenNum</a> from mode_oddeve.o(i.selectOddEvenNum) referenced from mode_oddeve.o(i.showOddEvenStr)
 <LI><a href="#[59]">selectOddOrEven</a> from mode.o(i.selectOddOrEven) referenced from mode.o(i.itemLoader)
 <LI><a href="#[5b]">selectTailNum</a> from tailnum.o(i.selectTailNum) referenced from tailnum.o(i.itemLoader)
 <LI><a href="#[3]">selectThursdayNum</a> from mode_couple.o(i.selectThursdayNum) referenced 2 times from mode_couple.o(.data)
 <LI><a href="#[62]">selectTime</a> from timedate.o(i.selectTime) referenced from timedate.o(i.itemLoader)
 <LI><a href="#[1]">selectTuesdayNum</a> from mode_couple.o(i.selectTuesdayNum) referenced 2 times from mode_couple.o(.data)
 <LI><a href="#[2]">selectWednesdayNum</a> from mode_couple.o(i.selectWednesdayNum) referenced 2 times from mode_couple.o(.data)
 <LI><a href="#[76]">setVolumeAlarm</a> from sound.o(i.setVolumeAlarm) referenced from sound.o(i.setMenuOptions)
 <LI><a href="#[77]">setVolumeHour</a> from sound.o(i.setVolumeHour) referenced from sound.o(i.setMenuOptions)
 <LI><a href="#[75]">setVolumeUI</a> from sound.o(i.setVolumeUI) referenced from sound.o(i.setMenuOptions)
 <LI><a href="#[72]">tailNumDataDown</a> from tailnum.o(i.tailNumDataDown) referenced from tailnum.o(i.selectTailNum)
 <LI><a href="#[73]">tailNumDataUp</a> from tailnum.o(i.tailNumDataUp) referenced from tailnum.o(i.selectTailNum)
 <LI><a href="#[74]">tailNumDraw</a> from tailnum.o(i.tailNumDraw) referenced from tailnum.o(i.selectTailNum)
 <LI><a href="#[5c]">tailnum_select</a> from tailnum.o(i.tailnum_select) referenced from m_main.o(i.itemLoader)
 <LI><a href="#[5c]">tailnum_select</a> from tailnum.o(i.tailnum_select) referenced from tailnum.o(i.tailnum_select)
 <LI><a href="#[6d]">thisdraw</a> from sound.o(i.thisdraw) referenced from sound.o(i.mSoundOpen)
 <LI><a href="#[71]">thisdraw</a> from mode.o(i.thisdraw) referenced from mode.o(i.mode_select)
 <LI><a href="#[4c]">timeDataDown</a> from timedate.o(i.timeDataDown) referenced from timedate.o(i.beginSelect)
 <LI><a href="#[4a]">timeDataUp</a> from timedate.o(i.timeDataUp) referenced from timedate.o(i.beginSelect)
 <LI><a href="#[4d]">timeDateDraw</a> from timedate.o(i.timeDateDraw) referenced from timedate.o(i.beginSelect)
 <LI><a href="#[6e]">watchface_normal</a> from normal.o(i.watchface_normal) referenced from main.o(i.main)
 <LI><a href="#[40]">weekNumDataDown</a> from mode_couple.o(i.weekNumDataDown) referenced from mode_couple.o(i.beginSelect)
 <LI><a href="#[42]">weekNumDataUp</a> from mode_couple.o(i.weekNumDataUp) referenced from mode_couple.o(i.beginSelect)
 <LI><a href="#[43]">weekNumDraw</a> from mode_couple.o(i.weekNumDraw) referenced from mode_couple.o(i.beginSelect)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[3c]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(.text)
</UL>
<P><STRONG><a name="[15a]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[7b]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[94]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[15b]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[15c]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[15d]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[15e]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[15f]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[160]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[7e]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crt_animation
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawTitle
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[161]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[162]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[7d]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_log
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_loop
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_clearArea
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crt_animation
</UL>

<P><STRONG><a name="[e4]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
</UL>

<P><STRONG><a name="[163]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[7f]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[111]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_log
</UL>

<P><STRONG><a name="[10e]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_log
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawTitle
</UL>

<P><STRONG><a name="[159]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeFlash
</UL>

<P><STRONG><a name="[123]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuOption_P
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeDateDraw
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itemLoader
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawHeadLine
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawTitle
</UL>

<P><STRONG><a name="[80]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuOption
</UL>

<P><STRONG><a name="[82]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuOption
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[87]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[88]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[89]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuOption
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[8a]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[ea]"></a>__ARM_scalbn</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[164]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[8b]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuOption
</UL>

<P><STRONG><a name="[8d]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[8e]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[8f]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[150]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuOption
</UL>

<P><STRONG><a name="[91]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuOption
</UL>

<P><STRONG><a name="[165]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[f6]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[92]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[83]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[166]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[84]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[167]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[168]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[81]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[8c]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>

<P><STRONG><a name="[86]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[85]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>

<P><STRONG><a name="[93]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[f3]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[7c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[169]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[16a]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[16b]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[121]"></a>AlarmEnalbe</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, alarm.o(i.AlarmEnalbe))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw
</UL>

<P><STRONG><a name="[9]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.EXTI9_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EXTI9_5_IRQHandler &rArr; HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[ce]"></a>Error_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i.Error_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C1_Init
</UL>

<P><STRONG><a name="[dc]"></a>FLASH_PageErase</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f1xx_hal_flash_ex.o(i.FLASH_PageErase))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
</UL>

<P><STRONG><a name="[96]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, stm32f1xx_hal_flash.o(i.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_SetErrorCode
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
</UL>

<P><STRONG><a name="[99]"></a>HAL_Delay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32f1xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_log
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
</UL>

<P><STRONG><a name="[de]"></a>HAL_FLASH_Lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f1xx_hal_flash.o(i.HAL_FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
</UL>

<P><STRONG><a name="[9a]"></a>HAL_FLASH_Program</STRONG> (Thumb, 120 bytes, Stack size 40 bytes, stm32f1xx_hal_flash.o(i.HAL_FLASH_Program))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Program_HalfWord
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write_NoCheck
</UL>

<P><STRONG><a name="[da]"></a>HAL_FLASH_Unlock</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f1xx_hal_flash.o(i.HAL_FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
</UL>

<P><STRONG><a name="[9c]"></a>HAL_GPIO_EXTI_Callback</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, main.o(i.HAL_GPIO_EXTI_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_GPIO_EXTI_Callback
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[95]"></a>HAL_GPIO_EXTI_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_EXTI_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_GPIO_EXTI_IRQHandler &rArr; HAL_GPIO_EXTI_Callback
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[a9]"></a>HAL_GPIO_Init</STRONG> (Thumb, 446 bytes, Stack size 40 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
</UL>

<P><STRONG><a name="[9d]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processButtons
</UL>

<P><STRONG><a name="[cc]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[97]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXEFlagUntilTimeout
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnRXNEFlagUntilTimeout
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnMasterAddressFlagUntilTimeout
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnBTFFlagUntilTimeout
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>

<P><STRONG><a name="[9e]"></a>HAL_I2C_Init</STRONG> (Thumb, 376 bytes, Stack size 16 bytes, stm32f1xx_hal_i2c.o(i.HAL_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C1_Init
</UL>

<P><STRONG><a name="[a1]"></a>HAL_I2C_Mem_Read</STRONG> (Thumb, 574 bytes, Stack size 64 bytes, stm32f1xx_hal_i2c.o(i.HAL_I2C_Mem_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnRXNEFlagUntilTimeout
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
</UL>

<P><STRONG><a name="[a5]"></a>HAL_I2C_Mem_Write</STRONG> (Thumb, 294 bytes, Stack size 64 bytes, stm32f1xx_hal_i2c.o(i.HAL_I2C_Mem_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXEFlagUntilTimeout
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnBTFFlagUntilTimeout
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeData
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteByte
</UL>

<P><STRONG><a name="[9f]"></a>HAL_I2C_MspInit</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, i2c.o(i.HAL_I2C_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
</UL>

<P><STRONG><a name="[e2]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f1xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[aa]"></a>HAL_Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f1xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ac]"></a>HAL_InitTick</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, stm32f1xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[ad]"></a>HAL_MspInit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32f1xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[b7]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
</UL>

<P><STRONG><a name="[af]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f1xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[ab]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[b1]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[a0]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[e5]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[b2]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[b3]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 778 bytes, Stack size 40 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[ae]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f1xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[c2]"></a>HAL_TIMEx_BreakCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_tim_ex.o(i.HAL_TIMEx_BreakCallback))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[c4]"></a>HAL_TIMEx_CommutCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_tim_ex.o(i.HAL_TIMEx_CommutCallback))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[d0]"></a>HAL_TIMEx_MasterConfigSynchronization</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, stm32f1xx_hal_tim_ex.o(i.HAL_TIMEx_MasterConfigSynchronization))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
</UL>

<P><STRONG><a name="[b4]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
</UL>

<P><STRONG><a name="[b5]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, tim.o(i.HAL_TIM_Base_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[d1]"></a>HAL_TIM_Base_Start_IT</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_Base_Start_IT))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
</UL>

<P><STRONG><a name="[b8]"></a>HAL_TIM_ConfigClockSource</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_ConfigClockSource))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_TIM_ConfigClockSource &rArr; TIM_TI2_ConfigInputStage
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI2_ConfigInputStage
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TI1_ConfigInputStage
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITRx_SetConfig
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ETR_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
</UL>

<P><STRONG><a name="[be]"></a>HAL_TIM_IC_CaptureCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_IC_CaptureCallback))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[bd]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 358 bytes, Stack size 16 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutCallback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_BreakCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM3_IRQHandler
</UL>

<P><STRONG><a name="[bf]"></a>HAL_TIM_OC_DelayElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_OC_DelayElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[c0]"></a>HAL_TIM_PWM_PulseFinishedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_PWM_PulseFinishedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[c1]"></a>HAL_TIM_PeriodElapsedCallback</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, tim.o(i.HAL_TIM_PeriodElapsedCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[c3]"></a>HAL_TIM_TriggerCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_tim.o(i.HAL_TIM_TriggerCallback))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[c5]"></a>HAL_UART_Init</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, stm32f1xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
</UL>

<P><STRONG><a name="[c6]"></a>HAL_UART_MspInit</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, usart.o(i.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[ca]"></a>I2C_WriteByte</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, oled_driver.o(i.I2C_WriteByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = I2C_WriteByte &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCmd
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDat
</UL>

<P><STRONG><a name="[cb]"></a>MX_GPIO_Init</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, gpio.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cd]"></a>MX_I2C1_Init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, i2c.o(i.MX_I2C1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MX_I2C1_Init &rArr; HAL_I2C_Init &rArr; HAL_I2C_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[cf]"></a>MX_TIM3_Init</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, tim.o(i.MX_TIM3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MX_TIM3_Init &rArr; HAL_TIM_Base_Init &rArr; HAL_TIM_Base_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_MasterConfigSynchronization
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d2]"></a>MX_USART1_UART_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, usart.o(i.MX_USART1_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = MX_USART1_UART_Init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d3]"></a>MX_USART2_UART_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, usart.o(i.MX_USART2_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = MX_USART2_UART_Init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.NMI_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[d4]"></a>OLED_CLS</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, oled_driver.o(i.OLED_CLS))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = OLED_CLS &rArr; WriteCmd &rArr; I2C_WriteByte &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCmd
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDat
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
</UL>

<P><STRONG><a name="[d7]"></a>OLED_Init</STRONG> (Thumb, 244 bytes, Stack size 16 bytes, oled_driver.o(i.OLED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = OLED_Init &rArr; OLED_CLS &rArr; WriteCmd &rArr; I2C_WriteByte &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCmd
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_CLS
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[d8]"></a>ReadData</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, pcf8563.o(i.ReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcf8563_Read
</UL>

<P><STRONG><a name="[db]"></a>STMFLASH_Read</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, flash.o(i.STMFLASH_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = STMFLASH_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeFlash
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readFlash
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
</UL>

<P><STRONG><a name="[d9]"></a>STMFLASH_Write</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, flash.o(i.STMFLASH_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Unlock
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Lock
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PageErase
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write_NoCheck
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeFlash
</UL>

<P><STRONG><a name="[dd]"></a>STMFLASH_Write_NoCheck</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, flash.o(i.STMFLASH_Write_NoCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = STMFLASH_Write_NoCheck &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
</UL>

<P><STRONG><a name="[b]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[df]"></a>Set_PCF8563_Time</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, pcf8563.o(i.Set_PCF8563_Time))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Set_PCF8563_Time &rArr; writeData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeData
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_set
</UL>

<P><STRONG><a name="[e1]"></a>Set_PCF8563_date</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, pcf8563.o(i.Set_PCF8563_date))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = Set_PCF8563_date &rArr; writeData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeData
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_set
</UL>

<P><STRONG><a name="[e]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.SysTick_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[e3]"></a>SystemClock_Config</STRONG> (Thumb, 94 bytes, Stack size 72 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3b]"></a>SystemInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, system_stm32f1xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(.text)
</UL>
<P><STRONG><a name="[2c]"></a>TIM3_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.TIM3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TIM3_IRQHandler &rArr; HAL_TIM_IRQHandler &rArr; HAL_TIM_PeriodElapsedCallback
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[b6]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, stm32f1xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[b9]"></a>TIM_ETR_SetConfig</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f1xx_hal_tim.o(i.TIM_ETR_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_ETR_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[a]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f103xb.o(RESET)
</UL>
<P><STRONG><a name="[d5]"></a>WriteCmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, oled_driver.o(i.WriteCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WriteCmd &rArr; I2C_WriteByte &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_flush
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_CLS
</UL>

<P><STRONG><a name="[d6]"></a>WriteDat</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, oled_driver.o(i.WriteDat))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = WriteDat &rArr; I2C_WriteByte &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_flush
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_CLS
</UL>

<P><STRONG><a name="[e6]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[16c]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[117]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thisdraw
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_update
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeDateDraw
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itemLoader
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thisdraw
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawHeadLine
</UL>

<P><STRONG><a name="[16d]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[16e]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[e8]"></a>__0vsprintf</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[16f]"></a>__1vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[170]"></a>__2vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[171]"></a>__c89vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[10d]"></a>vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_log
</UL>

<P><STRONG><a name="[ee]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
</UL>

<P><STRONG><a name="[e9]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 828 bytes, Stack size 128 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>

<P><STRONG><a name="[eb]"></a>__kernel_cos</STRONG> (Thumb, 230 bytes, Stack size 48 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>

<P><STRONG><a name="[ec]"></a>__kernel_poly</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[ed]"></a>__kernel_sin</STRONG> (Thumb, 224 bytes, Stack size 64 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>

<P><STRONG><a name="[f0]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_infnan &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>

<P><STRONG><a name="[f1]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>

<P><STRONG><a name="[ef]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_underflow &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
</UL>

<P><STRONG><a name="[172]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[173]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[174]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[153]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>

<P><STRONG><a name="[f7]"></a>addBackOption</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, menu.o(i.addBackOption))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = addBackOption &rArr; setMenuOption_P &rArr; setMenuOption &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuOption_P
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itemLoader
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itemLoader
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itemLoader
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itemLoader
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itemLoader
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itemLoader
</UL>

<P><STRONG><a name="[12f]"></a>alarm_get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, alarm.o(i.alarm_get))
<BR><BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNextAlarm
</UL>

<P><STRONG><a name="[f9]"></a>alarm_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, alarm.o(i.alarm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = alarm_init &rArr; getNextAlarm
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNextAlarm
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fb]"></a>alarm_updateNextAlarm</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, alarm.o(i.alarm_updateNextAlarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = alarm_updateNextAlarm &rArr; getNextAlarm
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNextAlarm
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_set
</UL>

<P><STRONG><a name="[116]"></a>animation_active</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, animation.o(i.animation_active))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_update
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doBtn
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
</UL>

<P><STRONG><a name="[11d]"></a>animation_movingOn</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, animation.o(i.animation_movingOn))
<BR><BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doBtn
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
</UL>

<P><STRONG><a name="[126]"></a>animation_offsetY</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, animation.o(i.animation_offsetY))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bitmap
</UL>

<P><STRONG><a name="[fe]"></a>animation_start</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, animation.o(i.animation_start))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginAnimation2
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_normal
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginAnimation
</UL>

<P><STRONG><a name="[115]"></a>animation_update</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, animation.o(i.animation_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = animation_update
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_update
</UL>

<P><STRONG><a name="[13e]"></a>appconfig_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, appconfig.o(i.appconfig_init))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[175]"></a>appconfig_reset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, appconfig.o(i.appconfig_reset), UNUSED)

<P><STRONG><a name="[13a]"></a>appconfig_save</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, appconfig.o(i.appconfig_save))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSelect
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveTimeDate
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSelect
</UL>

<P><STRONG><a name="[3e]"></a>back</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, menu.o(i.back))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = back &rArr; mMainOpen
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mMainOpen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menu.o(i.addBackOption)
</UL>
<P><STRONG><a name="[fd]"></a>beginAnimation</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, menu.o(i.beginAnimation))
<BR><BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;animation_start
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuOption
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mMainOpen
</UL>

<P><STRONG><a name="[ff]"></a>beginAnimation2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, menu.o(i.beginAnimation2))
<BR><BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;animation_start
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeOddevenSelect
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeCoupleSelect
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_select
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tailnum_select
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mTimeDateOpen
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSoundOpen
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mOpen
</UL>

<P><STRONG><a name="[135]"></a>buttons_setFuncs</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, buttons.o(i.buttons_setFuncs))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_normal
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mMainOpen
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mOpen
</UL>

<P><STRONG><a name="[104]"></a>buttons_update</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, buttons.o(i.buttons_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = buttons_update &rArr; processButtons
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis_get
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processButtons
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_loop
</UL>

<P><STRONG><a name="[107]"></a>c_loop</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, main.o(i.c_loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = c_loop &rArr; time_update &rArr; pcf8563_gettime &rArr; pcf8563_Read &rArr; ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_update
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwrmgr_userActive
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_update
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttons_update
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10c]"></a>console_log</STRONG> (Thumb, 362 bytes, Stack size 56 bytes, gui_log_console.o(i.console_log))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + In Cycle
<LI>Call Chain = console_log &rArr;  console_log (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_log
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_flush
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcopy_cnt
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_print_s
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_huanhang_str_idx
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_log
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[141]"></a>display_load</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, display.o(i.display_load))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_close
</UL>

<P><STRONG><a name="[140]"></a>display_set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, display.o(i.display_set))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[136]"></a>display_setDrawFunc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, display.o(i.display_setDrawFunc))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_normal
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mOpen
</UL>

<P><STRONG><a name="[10a]"></a>display_update</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, display.o(i.display_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = display_update &rArr; draw_end &rArr; oled_flush &rArr; WriteCmd &rArr; I2C_WriteByte &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_string
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis_get
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_end
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crt_animation
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;animation_update
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;animation_active
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_loop
</UL>

<P><STRONG><a name="[154]"></a>div10</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, global.o(i.div10))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticker
</UL>

<P><STRONG><a name="[11a]"></a>doAction</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, menu.o(i.doAction))
<BR><BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loader
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSelect
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSelect
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSelect
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSelect
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSelect
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSelect
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSelect
</UL>

<P><STRONG><a name="[120]"></a>drawDriveSignal</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, ui.o(i.drawDriveSignal))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = drawDriveSignal &rArr; draw_bitmap
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis_get
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw
</UL>

<P><STRONG><a name="[122]"></a>draw_bitmap</STRONG> (Thumb, 338 bytes, Stack size 112 bytes, draw.o(i.draw_bitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = draw_bitmap
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readPixels
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;animation_offsetY
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weekNumDraw
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showWeekStr
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_string
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tailNumDraw
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showOddEvenStr
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showDaysleftStr
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oddEvenNumDraw
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuOption
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawDriveSignal
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticker
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawTickerNum
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawHeadLine
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_drawIcon
</UL>

<P><STRONG><a name="[128]"></a>draw_clearArea</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, draw.o(i.draw_clearArea))
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weekNumDraw
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showWeekStr
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tailNumDraw
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oddEvenNumDraw
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeDateDraw
</UL>

<P><STRONG><a name="[119]"></a>draw_end</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, draw.o(i.draw_end))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = draw_end &rArr; oled_flush &rArr; WriteCmd &rArr; I2C_WriteByte &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_flush
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_update
</UL>

<P><STRONG><a name="[118]"></a>draw_string</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, draw.o(i.draw_string))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = draw_string &rArr; draw_bitmap
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thisdraw
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_update
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuOption
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeDateDraw
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thisdraw
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticker
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawHeadLine
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawTitle
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_draw
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gui_print_s
</UL>

<P><STRONG><a name="[139]"></a>exitSelected</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, menu.o(i.exitSelected))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSelect
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPrevMenuExit
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSelect
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSelect
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSelect
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSelect
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSelect
</UL>

<P><STRONG><a name="[10f]"></a>find_huanhang_str_idx</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gui_log_console.o(i.find_huanhang_str_idx))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_log
</UL>

<P><STRONG><a name="[112]"></a>gui_print_s</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_log_console.o(i.gui_print_s))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = gui_print_s &rArr; draw_string &rArr; draw_bitmap
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_string
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_log
</UL>

<P><STRONG><a name="[fc]"></a>mMainOpen</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, m_main.o(i.mMainOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mMainOpen
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttons_setFuncs
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginAnimation
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;back
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_select
</UL>

<P><STRONG><a name="[5f]"></a>mSoundOpen</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, sound.o(i.mSoundOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mSoundOpen &rArr; setMenuInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPrevMenuOpen
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuInfo
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuFuncs
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginAnimation2
</UL>
<BR>[Address Reference Count : 2]<UL><LI> m_main.o(i.itemLoader)
<LI> sound.o(i.mSoundOpen)
</UL>
<P><STRONG><a name="[5e]"></a>mTimeDateOpen</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, timedate.o(i.mTimeDateOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mTimeDateOpen &rArr; setMenuInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPrevMenuOpen
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuInfo
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuFuncs
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginAnimation2
</UL>
<BR>[Address Reference Count : 2]<UL><LI> m_main.o(i.itemLoader)
<LI> timedate.o(i.mTimeDateOpen)
</UL>
<P><STRONG><a name="[3a]"></a>main</STRONG> (Thumb, 166 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = main &rArr; console_log &rArr;  console_log (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwrmgr_init
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcf8563_gettime
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_set
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_load
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_log
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appconfig_init
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_init
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PCF8563_date
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART2_UART_Init
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_loop
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_I2C1_Init
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[60]"></a>menu_close</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, menu.o(i.menu_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = menu_close
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_load
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_main.o(i.itemLoader)
</UL>
<P><STRONG><a name="[67]"></a>menu_down</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, menu.o(i.menu_down))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = menu_down &rArr; doBtn
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doBtn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_main.o(i.mOpen)
</UL>
<P><STRONG><a name="[66]"></a>menu_draw</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, menu.o(i.menu_draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = menu_draw &rArr; menu_drawIcon &rArr; drawTitle &rArr; draw_string &rArr; draw_bitmap
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_string
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_drawIcon
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loader
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawTitle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_main.o(i.mOpen)
</UL>
<P><STRONG><a name="[64]"></a>menu_select</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, menu.o(i.menu_select))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = menu_select &rArr; mMainOpen
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;animation_movingOn
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;animation_active
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mMainOpen
</UL>
<BR>[Address Reference Count : 3]<UL><LI> m_main.o(i.mMainOpen)
<LI> m_main.o(i.mOpen)
<LI> normal.o(i.watchface_normal)
</UL>
<P><STRONG><a name="[68]"></a>menu_up</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, menu.o(i.menu_up))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = menu_up &rArr; doBtn
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doBtn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_main.o(i.mOpen)
</UL>
<P><STRONG><a name="[105]"></a>millis_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tim.o(i.millis_get))
<BR><BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_update
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttons_update
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;processButtons
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawDriveSignal
</UL>

<P><STRONG><a name="[155]"></a>mod10</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, global.o(i.mod10))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticker
</UL>

<P><STRONG><a name="[143]"></a>modeCoupleSelect</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, mode_couple.o(i.modeCoupleSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = modeCoupleSelect &rArr; setMenuInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPrevMenuOpen
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuInfo
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuFuncs
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginAnimation2
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selectCouple
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mode_couple.o(i.modeCoupleSelect)
</UL>
<P><STRONG><a name="[145]"></a>modeOddevenSelect</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, mode_oddeve.o(i.modeOddevenSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = modeOddevenSelect &rArr; setMenuInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPrevMenuOpen
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuInfo
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuFuncs
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginAnimation2
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selectOddOrEven
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mode_oddeve.o(i.modeOddevenSelect)
</UL>
<P><STRONG><a name="[5d]"></a>mode_select</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, mode.o(i.mode_select))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mode_select &rArr; setMenuInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPrevMenuOpen
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuInfo
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuFuncs
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginAnimation2
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mode.o(i.mode_select)
<LI> m_main.o(i.itemLoader)
</UL>
<P><STRONG><a name="[55]"></a>nextOption</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, menu.o(i.nextOption))
<BR><BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkScroll
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mDown
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mDown
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mDown
</UL>
<BR>[Address Reference Count : 5]<UL><LI> mode.o(i.mode_select)
<LI> tailnum.o(i.endSelect)
<LI> tailnum.o(i.tailnum_select)
<LI> m_main.o(i.mOpen)
<LI> sound.o(i.mSoundOpen)
</UL>
<P><STRONG><a name="[113]"></a>oled_flush</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, oled_driver.o(i.oled_flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = oled_flush &rArr; WriteCmd &rArr; I2C_WriteByte &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCmd
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDat
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_log
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_end
</UL>

<P><STRONG><a name="[148]"></a>paramUpdate</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, mode_oddeve.o(i.paramUpdate))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDataUp
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramDataDown
</UL>

<P><STRONG><a name="[149]"></a>pcf8563_Read</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, pcf8563.o(i.pcf8563_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = pcf8563_Read &rArr; ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BCDtoDEC
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcf8563_gettime
</UL>

<P><STRONG><a name="[13d]"></a>pcf8563_gettime</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, pcf8563.o(i.pcf8563_gettime))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = pcf8563_gettime &rArr; pcf8563_Read &rArr; ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcf8563_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_update
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>prevOption</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, menu.o(i.prevOption))
<BR><BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkScroll
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mUp
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mUp
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mUp
</UL>
<BR>[Address Reference Count : 5]<UL><LI> mode.o(i.mode_select)
<LI> tailnum.o(i.endSelect)
<LI> tailnum.o(i.tailnum_select)
<LI> m_main.o(i.mOpen)
<LI> sound.o(i.mSoundOpen)
</UL>
<P><STRONG><a name="[13f]"></a>pwrmgr_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pwrmgr.o(i.pwrmgr_init))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[109]"></a>pwrmgr_userActive</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, pwrmgr.o(i.pwrmgr_userActive))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_loop
</UL>

<P><STRONG><a name="[144]"></a>readFlash</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, flash.o(i.readFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = readFlash &rArr; STMFLASH_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeOddevenSelect
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeCoupleSelect
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tailnum_select
</UL>

<P><STRONG><a name="[101]"></a>setMenuFuncs</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, menu.o(i.setMenuFuncs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = setMenuFuncs
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;endSelect
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginSelect
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeOddevenSelect
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeCoupleSelect
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_select
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tailnum_select
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selectTailNum
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;endSelect
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;endSelect
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginSelect
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;endSelect
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginSelect
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mTimeDateOpen
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSoundOpen
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mOpen
</UL>

<P><STRONG><a name="[137]"></a>setMenuInfo</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, menu.o(i.setMenuInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = setMenuInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeOddevenSelect
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeCoupleSelect
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_select
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tailnum_select
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mTimeDateOpen
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSoundOpen
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mOpen
</UL>

<P><STRONG><a name="[134]"></a>setMenuOption</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, menu.o(i.setMenuOption))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = setMenuOption &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_string
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bitmap
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginAnimation
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showWeekStr
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuOption_P
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showOddEvenStr
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showDaysleftStr
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itemLoader
</UL>

<P><STRONG><a name="[f8]"></a>setMenuOption_P</STRONG> (Thumb, 40 bytes, Stack size 40 bytes, menu.o(i.setMenuOption_P))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = setMenuOption_P &rArr; setMenuOption &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuOption
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addBackOption
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itemLoader
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itemLoader
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itemLoader
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuOptions
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itemLoader
</UL>

<P><STRONG><a name="[13b]"></a>setPrevMenuExit</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, menu.o(i.setPrevMenuExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = setPrevMenuExit
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitSelected
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSelect
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSelect
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSelect
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSelect
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSelect
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSelect
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSelect
</UL>

<P><STRONG><a name="[138]"></a>setPrevMenuOpen</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, menu.o(i.setPrevMenuOpen))
<BR><BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeOddevenSelect
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeCoupleSelect
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_select
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tailnum_select
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mTimeDateOpen
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSoundOpen
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mOpen
</UL>

<P><STRONG><a name="[151]"></a>sin</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, sin.o(i.sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuOption
</UL>

<P><STRONG><a name="[110]"></a>strcopy_cnt</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_log_console.o(i.strcopy_cnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcopy_cnt
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;console_log
</UL>

<P><STRONG><a name="[14c]"></a>switchTwoNum</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mode_couple.o(i.switchTwoNum))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ruleAutoMatch
</UL>

<P><STRONG><a name="[5c]"></a>tailnum_select</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, tailnum.o(i.tailnum_select))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tailnum_select &rArr; setMenuInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPrevMenuOpen
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuInfo
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuFuncs
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginAnimation2
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readFlash
</UL>
<BR>[Address Reference Count : 2]<UL><LI> tailnum.o(i.tailnum_select)
<LI> m_main.o(i.itemLoader)
</UL>
<P><STRONG><a name="[14e]"></a>time_dow</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, time.o(i.time_dow))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selectDate
</UL>

<P><STRONG><a name="[157]"></a>time_isLeapYear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, time.o(i.time_isLeapYear))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_monthDayCount
</UL>

<P><STRONG><a name="[14f]"></a>time_monthDayCount</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, time.o(i.time_monthDayCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = time_monthDayCount
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_isLeapYear
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selectDate
</UL>

<P><STRONG><a name="[14d]"></a>time_set</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, time.o(i.time_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = time_set &rArr; Set_PCF8563_date &rArr; writeData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PCF8563_date
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PCF8563_Time
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_timeMode
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_updateNextAlarm
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;saveTimeDate
</UL>

<P><STRONG><a name="[12d]"></a>time_timeMode</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, time.o(i.time_timeMode))
<BR><BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNextAlarm
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selectTime
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_set
</UL>

<P><STRONG><a name="[108]"></a>time_update</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, time.o(i.time_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = time_update &rArr; pcf8563_gettime &rArr; pcf8563_Read &rArr; ReadData &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcf8563_gettime
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tune_play
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;c_loop
</UL>

<P><STRONG><a name="[158]"></a>tune_play</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tune.o(i.tune_play))
<BR><BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_update
</UL>

<P><STRONG><a name="[6e]"></a>watchface_normal</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, normal.o(i.watchface_normal))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = watchface_normal
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;animation_start
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_setDrawFunc
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttons_setFuncs
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[e0]"></a>writeData</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, pcf8563.o(i.writeData))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = writeData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PCF8563_date
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PCF8563_Time
</UL>

<P><STRONG><a name="[13c]"></a>writeFlash</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, flash.o(i.writeFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = writeFlash &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Write
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STMFLASH_Read
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSelect
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSelect
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mSelect
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[6f]"></a>itemLoader</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, mode.o(i.itemLoader))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = itemLoader &rArr; setMenuOption_P &rArr; setMenuOption &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuOption_P
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addBackOption
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mode.o(i.mode_select)
</UL>
<P><STRONG><a name="[70]"></a>mSelect</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, mode.o(i.mSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = mSelect &rArr; setPrevMenuExit
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPrevMenuExit
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitSelected
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAction
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appconfig_save
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mode.o(i.mode_select)
</UL>
<P><STRONG><a name="[58]"></a>selectCouple</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mode.o(i.selectCouple))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = selectCouple &rArr; modeCoupleSelect &rArr; setMenuInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeCoupleSelect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mode.o(i.itemLoader)
</UL>
<P><STRONG><a name="[5a]"></a>selectCoupleLoop</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, mode.o(i.selectCoupleLoop))
<BR>[Address Reference Count : 1]<UL><LI> mode.o(i.itemLoader)
</UL>
<P><STRONG><a name="[59]"></a>selectOddOrEven</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mode.o(i.selectOddOrEven))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = selectOddOrEven &rArr; modeOddevenSelect &rArr; setMenuInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;modeOddevenSelect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mode.o(i.itemLoader)
</UL>
<P><STRONG><a name="[71]"></a>thisdraw</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, mode.o(i.thisdraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = thisdraw &rArr; draw_string &rArr; draw_bitmap
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_string
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mode.o(i.mode_select)
</UL>
<P><STRONG><a name="[100]"></a>beginSelect</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, mode_couple.o(i.beginSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = beginSelect &rArr; setMenuFuncs
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuFuncs
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selectWednesdayNum
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selectTuesdayNum
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selectThursdayNum
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selectMondayNum
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selectFridayNum
</UL>

<P><STRONG><a name="[129]"></a>endSelect</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, mode_couple.o(i.endSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = endSelect &rArr; setMenuFuncs
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuFuncs
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selectWednesdayNum
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selectTuesdayNum
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selectThursdayNum
<LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selectMondayNum
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selectFridayNum
</UL>

<P><STRONG><a name="[3f]"></a>itemLoader</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, mode_couple.o(i.itemLoader))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = itemLoader &rArr; showWeekStr &rArr; setMenuOption &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showWeekStr
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addBackOption
</UL>
<BR>[Address Reference Count : 3]<UL><LI> mode_couple.o(i.beginSelect)
<LI> mode_couple.o(i.endSelect)
<LI> mode_couple.o(i.modeCoupleSelect)
</UL>
<P><STRONG><a name="[4f]"></a>mDown</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, mode_couple.o(i.mDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mDown
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nextOption
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mode_couple.o(i.endSelect)
<LI> mode_couple.o(i.modeCoupleSelect)
</UL>
<P><STRONG><a name="[41]"></a>mSelect</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, mode_couple.o(i.mSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = mSelect &rArr; writeFlash &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPrevMenuExit
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitSelected
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAction
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeFlash
</UL>
<BR>[Address Reference Count : 3]<UL><LI> mode_couple.o(i.beginSelect)
<LI> mode_couple.o(i.endSelect)
<LI> mode_couple.o(i.modeCoupleSelect)
</UL>
<P><STRONG><a name="[4e]"></a>mUp</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, mode_couple.o(i.mUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mUp
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prevOption
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mode_couple.o(i.endSelect)
<LI> mode_couple.o(i.modeCoupleSelect)
</UL>
<P><STRONG><a name="[14b]"></a>ruleAutoMatch</STRONG> (Thumb, 212 bytes, Stack size 12 bytes, mode_couple.o(i.ruleAutoMatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ruleAutoMatch
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchTwoNum
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weekNumDataUp
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weekNumDataDown
</UL>

<P><STRONG><a name="[4]"></a>selectFridayNum</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, mode_couple.o(i.selectFridayNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = selectFridayNum &rArr; endSelect &rArr; setMenuFuncs
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;endSelect
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginSelect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mode_couple.o(.data)
</UL>
<P><STRONG><a name="[0]"></a>selectMondayNum</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, mode_couple.o(i.selectMondayNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = selectMondayNum &rArr; endSelect &rArr; setMenuFuncs
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;endSelect
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginSelect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mode_couple.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>selectThursdayNum</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, mode_couple.o(i.selectThursdayNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = selectThursdayNum &rArr; endSelect &rArr; setMenuFuncs
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;endSelect
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginSelect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mode_couple.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>selectTuesdayNum</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, mode_couple.o(i.selectTuesdayNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = selectTuesdayNum &rArr; endSelect &rArr; setMenuFuncs
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;endSelect
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginSelect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mode_couple.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>selectWednesdayNum</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, mode_couple.o(i.selectWednesdayNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = selectWednesdayNum &rArr; endSelect &rArr; setMenuFuncs
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;endSelect
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginSelect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mode_couple.o(.data)
</UL>
<P><STRONG><a name="[130]"></a>showWeekStr</STRONG> (Thumb, 248 bytes, Stack size 104 bytes, mode_couple.o(i.showWeekStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = showWeekStr &rArr; setMenuOption &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuOption
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_clearArea
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itemLoader
</UL>

<P><STRONG><a name="[40]"></a>weekNumDataDown</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, mode_couple.o(i.weekNumDataDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = weekNumDataDown &rArr; ruleAutoMatch
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ruleAutoMatch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mode_couple.o(i.beginSelect)
</UL>
<P><STRONG><a name="[42]"></a>weekNumDataUp</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, mode_couple.o(i.weekNumDataUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = weekNumDataUp &rArr; ruleAutoMatch
</UL>
<BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ruleAutoMatch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mode_couple.o(i.beginSelect)
</UL>
<P><STRONG><a name="[43]"></a>weekNumDraw</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, mode_couple.o(i.weekNumDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = weekNumDraw &rArr; draw_bitmap
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_clearArea
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mode_couple.o(i.beginSelect)
</UL>
<P><STRONG><a name="[102]"></a>beginSelect</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, mode_oddeve.o(i.beginSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = beginSelect &rArr; setMenuFuncs
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuFuncs
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selectOddEvenNum
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selectDaysleftNum
</UL>

<P><STRONG><a name="[12a]"></a>endSelect</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, mode_oddeve.o(i.endSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = endSelect &rArr; setMenuFuncs
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuFuncs
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selectOddEvenNum
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selectDaysleftNum
</UL>

<P><STRONG><a name="[44]"></a>itemLoader</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, mode_oddeve.o(i.itemLoader))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = itemLoader &rArr; showOddEvenStr &rArr; setMenuOption &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addBackOption
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showOddEvenStr
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showDaysleftStr
</UL>
<BR>[Address Reference Count : 3]<UL><LI> mode_oddeve.o(i.beginSelect)
<LI> mode_oddeve.o(i.endSelect)
<LI> mode_oddeve.o(i.modeOddevenSelect)
</UL>
<P><STRONG><a name="[51]"></a>mDown</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, mode_oddeve.o(i.mDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mDown
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nextOption
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mode_oddeve.o(i.endSelect)
<LI> mode_oddeve.o(i.modeOddevenSelect)
</UL>
<P><STRONG><a name="[46]"></a>mSelect</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, mode_oddeve.o(i.mSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = mSelect &rArr; writeFlash &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPrevMenuExit
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitSelected
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAction
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeFlash
</UL>
<BR>[Address Reference Count : 3]<UL><LI> mode_oddeve.o(i.beginSelect)
<LI> mode_oddeve.o(i.endSelect)
<LI> mode_oddeve.o(i.modeOddevenSelect)
</UL>
<P><STRONG><a name="[50]"></a>mUp</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, mode_oddeve.o(i.mUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mUp
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prevOption
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mode_oddeve.o(i.endSelect)
<LI> mode_oddeve.o(i.modeOddevenSelect)
</UL>
<P><STRONG><a name="[48]"></a>oddEvenNumDraw</STRONG> (Thumb, 434 bytes, Stack size 56 bytes, mode_oddeve.o(i.oddEvenNumDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = oddEvenNumDraw &rArr; draw_bitmap
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_clearArea
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mode_oddeve.o(i.beginSelect)
</UL>
<P><STRONG><a name="[45]"></a>paramDataDown</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, mode_oddeve.o(i.paramDataDown))
<BR><BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramUpdate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mode_oddeve.o(i.beginSelect)
</UL>
<P><STRONG><a name="[47]"></a>paramDataUp</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, mode_oddeve.o(i.paramDataUp))
<BR><BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;paramUpdate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mode_oddeve.o(i.beginSelect)
</UL>
<P><STRONG><a name="[78]"></a>selectDaysleftNum</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, mode_oddeve.o(i.selectDaysleftNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = selectDaysleftNum &rArr; endSelect &rArr; setMenuFuncs
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;endSelect
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginSelect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mode_oddeve.o(i.showDaysleftStr)
</UL>
<P><STRONG><a name="[79]"></a>selectOddEvenNum</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, mode_oddeve.o(i.selectOddEvenNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = selectOddEvenNum &rArr; endSelect &rArr; setMenuFuncs
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;endSelect
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginSelect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mode_oddeve.o(i.showOddEvenStr)
</UL>
<P><STRONG><a name="[132]"></a>showDaysleftStr</STRONG> (Thumb, 336 bytes, Stack size 64 bytes, mode_oddeve.o(i.showDaysleftStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = showDaysleftStr &rArr; setMenuOption &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuOption
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itemLoader
</UL>

<P><STRONG><a name="[131]"></a>showOddEvenStr</STRONG> (Thumb, 112 bytes, Stack size 80 bytes, mode_oddeve.o(i.showOddEvenStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = showOddEvenStr &rArr; setMenuOption &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuOption
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itemLoader
</UL>

<P><STRONG><a name="[14a]"></a>BCDtoDEC</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, pcf8563.o(i.BCDtoDEC))
<BR><BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pcf8563_Read
</UL>

<P><STRONG><a name="[12b]"></a>endSelect</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, tailnum.o(i.endSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = endSelect &rArr; setMenuFuncs
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuFuncs
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selectTailNum
</UL>

<P><STRONG><a name="[52]"></a>itemLoader</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, tailnum.o(i.itemLoader))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = itemLoader &rArr; setMenuOption_P &rArr; setMenuOption &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuOption_P
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addBackOption
</UL>
<BR>[Address Reference Count : 3]<UL><LI> tailnum.o(i.endSelect)
<LI> tailnum.o(i.selectTailNum)
<LI> tailnum.o(i.tailnum_select)
</UL>
<P><STRONG><a name="[54]"></a>mSelect</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, tailnum.o(i.mSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = mSelect &rArr; writeFlash &rArr; STMFLASH_Write &rArr; STMFLASH_Write_NoCheck &rArr; HAL_FLASH_Program &rArr; FLASH_WaitForLastOperation
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPrevMenuExit
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitSelected
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAction
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeFlash
</UL>
<BR>[Address Reference Count : 3]<UL><LI> tailnum.o(i.endSelect)
<LI> tailnum.o(i.selectTailNum)
<LI> tailnum.o(i.tailnum_select)
</UL>
<P><STRONG><a name="[5b]"></a>selectTailNum</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, tailnum.o(i.selectTailNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = selectTailNum &rArr; endSelect &rArr; setMenuFuncs
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuFuncs
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;endSelect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tailnum.o(i.itemLoader)
</UL>
<P><STRONG><a name="[72]"></a>tailNumDataDown</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, tailnum.o(i.tailNumDataDown))
<BR>[Address Reference Count : 1]<UL><LI> tailnum.o(i.selectTailNum)
</UL>
<P><STRONG><a name="[73]"></a>tailNumDataUp</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, tailnum.o(i.tailNumDataUp))
<BR>[Address Reference Count : 1]<UL><LI> tailnum.o(i.selectTailNum)
</UL>
<P><STRONG><a name="[74]"></a>tailNumDraw</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, tailnum.o(i.tailNumDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = tailNumDraw &rArr; draw_bitmap
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_clearArea
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tailnum.o(i.selectTailNum)
</UL>
<P><STRONG><a name="[c9]"></a>I2C_IsAcknowledgeFailed</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f1xx_hal_i2c.o(i.I2C_IsAcknowledgeFailed))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXEFlagUntilTimeout
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnBTFFlagUntilTimeout
</UL>

<P><STRONG><a name="[a3]"></a>I2C_RequestMemoryRead</STRONG> (Thumb, 246 bytes, Stack size 40 bytes, stm32f1xx_hal_i2c.o(i.I2C_RequestMemoryRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = I2C_RequestMemoryRead &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXEFlagUntilTimeout
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnMasterAddressFlagUntilTimeout
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[a6]"></a>I2C_RequestMemoryWrite</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, stm32f1xx_hal_i2c.o(i.I2C_RequestMemoryWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXEFlagUntilTimeout
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnMasterAddressFlagUntilTimeout
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[a8]"></a>I2C_WaitOnBTFFlagUntilTimeout</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, stm32f1xx_hal_i2c.o(i.I2C_WaitOnBTFFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_WaitOnBTFFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[a2]"></a>I2C_WaitOnFlagUntilTimeout</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, stm32f1xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[c8]"></a>I2C_WaitOnMasterAddressFlagUntilTimeout</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, stm32f1xx_hal_i2c.o(i.I2C_WaitOnMasterAddressFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>

<P><STRONG><a name="[a4]"></a>I2C_WaitOnRXNEFlagUntilTimeout</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, stm32f1xx_hal_i2c.o(i.I2C_WaitOnRXNEFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_WaitOnRXNEFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[a7]"></a>I2C_WaitOnTXEFlagUntilTimeout</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, stm32f1xx_hal_i2c.o(i.I2C_WaitOnTXEFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_WaitOnTXEFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[b0]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>

<P><STRONG><a name="[9b]"></a>FLASH_Program_HalfWord</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f1xx_hal_flash.o(i.FLASH_Program_HalfWord))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FLASH_Program
</UL>

<P><STRONG><a name="[98]"></a>FLASH_SetErrorCode</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, stm32f1xx_hal_flash.o(i.FLASH_SetErrorCode))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[bc]"></a>TIM_ITRx_SetConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f1xx_hal_tim.o(i.TIM_ITRx_SetConfig))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[ba]"></a>TIM_TI1_ConfigInputStage</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f1xx_hal_tim.o(i.TIM_TI1_ConfigInputStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_TI1_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[bb]"></a>TIM_TI2_ConfigInputStage</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32f1xx_hal_tim.o(i.TIM_TI2_ConfigInputStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_TI2_ConfigInputStage
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_ConfigClockSource
</UL>

<P><STRONG><a name="[c7]"></a>UART_SetConfig</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, stm32f1xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[fa]"></a>getNextAlarm</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, alarm.o(i.getNextAlarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = getNextAlarm
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_timeMode
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_get
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;toMinutes
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_init
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_updateNextAlarm
</UL>

<P><STRONG><a name="[12e]"></a>toMinutes</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, alarm.o(i.toMinutes))
<BR><BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getNextAlarm
</UL>

<P><STRONG><a name="[106]"></a>processButtons</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, buttons.o(i.processButtons))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = processButtons
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;millis_get
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttons_update
</UL>

<P><STRONG><a name="[114]"></a>crt_animation</STRONG> (Thumb, 320 bytes, Stack size 40 bytes, display.o(i.crt_animation))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = crt_animation
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_update
</UL>

<P><STRONG><a name="[127]"></a>readPixels</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, draw.o(i.readPixels))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bitmap
</UL>

<P><STRONG><a name="[69]"></a>itemLoader</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, m_main.o(i.itemLoader))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = itemLoader &rArr; setMenuOption_P &rArr; setMenuOption &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuOption_P
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_main.o(i.mOpen)
</UL>
<P><STRONG><a name="[65]"></a>mOpen</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, m_main.o(i.mOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mOpen &rArr; setMenuInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPrevMenuOpen
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuInfo
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuFuncs
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginAnimation2
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_setDrawFunc
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;buttons_setFuncs
</UL>
<BR>[Address Reference Count : 2]<UL><LI> m_main.o(i.mMainOpen)
<LI> m_main.o(i.mOpen)
</UL>
<P><STRONG><a name="[6a]"></a>mSelect</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, m_main.o(i.mSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = mSelect &rArr; setPrevMenuExit
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPrevMenuExit
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAction
</UL>
<BR>[Address Reference Count : 1]<UL><LI> m_main.o(i.mOpen)
</UL>
<P><STRONG><a name="[147]"></a>checkScroll</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, menu.o(i.checkScroll))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prevOption
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nextOption
</UL>

<P><STRONG><a name="[10b]"></a>clear</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, menu.o(i.clear))
<BR><BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuInfo
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_close
</UL>

<P><STRONG><a name="[11c]"></a>doBtn</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, menu.o(i.doBtn))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = doBtn
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;animation_movingOn
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;animation_active
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_up
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_down
</UL>

<P><STRONG><a name="[125]"></a>drawTitle</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, menu.o(i.drawTitle))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = drawTitle &rArr; draw_string &rArr; draw_bitmap
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_string
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_drawIcon
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_draw
</UL>

<P><STRONG><a name="[11b]"></a>loader</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, menu.o(i.loader))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAction
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_drawIcon
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_draw
</UL>

<P><STRONG><a name="[142]"></a>menu_drawIcon</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, menu.o(i.menu_drawIcon))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = menu_drawIcon &rArr; drawTitle &rArr; draw_string &rArr; draw_bitmap
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bitmap
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loader
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawTitle
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;menu_draw
</UL>

<P><STRONG><a name="[7a]"></a>draw</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, normal.o(i.draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = draw &rArr; ticker &rArr; draw_string &rArr; draw_bitmap
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bitmap
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AlarmEnalbe
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawDriveSignal
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticker
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawHeadLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> normal.o(i.watchface_normal)
</UL>
<P><STRONG><a name="[11e]"></a>drawHeadLine</STRONG> (Thumb, 198 bytes, Stack size 56 bytes, normal.o(i.drawHeadLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = drawHeadLine &rArr; draw_string &rArr; draw_bitmap
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_string
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bitmap
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw
</UL>

<P><STRONG><a name="[124]"></a>drawTickerNum</STRONG> (Thumb, 128 bytes, Stack size 48 bytes, normal.o(i.drawTickerNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = drawTickerNum &rArr; draw_bitmap
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ticker
</UL>

<P><STRONG><a name="[11f]"></a>ticker</STRONG> (Thumb, 656 bytes, Stack size 72 bytes, normal.o(i.ticker))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = ticker &rArr; draw_string &rArr; draw_bitmap
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_string
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_bitmap
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mod10
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;div10
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drawTickerNum
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw
</UL>

<P><STRONG><a name="[6b]"></a>itemLoader</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sound.o(i.itemLoader))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = itemLoader &rArr; setMenuOptions &rArr; setMenuOption_P &rArr; setMenuOption &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addBackOption
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuOptions
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sound.o(i.mSoundOpen)
</UL>
<P><STRONG><a name="[6c]"></a>mSelect</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, sound.o(i.mSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = mSelect &rArr; setPrevMenuExit
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPrevMenuExit
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitSelected
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAction
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appconfig_save
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sound.o(i.mSoundOpen)
</UL>
<P><STRONG><a name="[133]"></a>setMenuOptions</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, sound.o(i.setMenuOptions))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = setMenuOptions &rArr; setMenuOption_P &rArr; setMenuOption &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuOption_P
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;itemLoader
</UL>

<P><STRONG><a name="[152]"></a>setVolume</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sound.o(i.setVolume))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setVolumeUI
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setVolumeHour
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setVolumeAlarm
</UL>

<P><STRONG><a name="[76]"></a>setVolumeAlarm</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sound.o(i.setVolumeAlarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = setVolumeAlarm
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setVolume
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sound.o(i.setMenuOptions)
</UL>
<P><STRONG><a name="[77]"></a>setVolumeHour</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sound.o(i.setVolumeHour))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = setVolumeHour
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setVolume
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sound.o(i.setMenuOptions)
</UL>
<P><STRONG><a name="[75]"></a>setVolumeUI</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sound.o(i.setVolumeUI))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = setVolumeUI
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setVolume
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sound.o(i.setMenuOptions)
</UL>
<P><STRONG><a name="[6d]"></a>thisdraw</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, sound.o(i.thisdraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = thisdraw &rArr; draw_string &rArr; draw_bitmap
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_string
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sound.o(i.mSoundOpen)
</UL>
<P><STRONG><a name="[103]"></a>beginSelect</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, timedate.o(i.beginSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = beginSelect &rArr; setMenuFuncs
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuFuncs
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selectTime
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selectDate
</UL>

<P><STRONG><a name="[12c]"></a>endSelect</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, timedate.o(i.endSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = endSelect &rArr; setMenuFuncs
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuFuncs
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selectTime
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;selectDate
</UL>

<P><STRONG><a name="[156]"></a>getMaxValForSetting</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, timedate.o(i.getMaxValForSetting))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeDataUp
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timeDataDown
</UL>

<P><STRONG><a name="[49]"></a>itemLoader</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, timedate.o(i.itemLoader))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = itemLoader &rArr; setMenuOption_P &rArr; setMenuOption &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuOption_P
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;addBackOption
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setMenuOption
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 3]<UL><LI> timedate.o(i.mTimeDateOpen)
<LI> timedate.o(i.beginSelect)
<LI> timedate.o(i.endSelect)
</UL>
<P><STRONG><a name="[57]"></a>mDown</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, timedate.o(i.mDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mDown
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nextOption
</UL>
<BR>[Address Reference Count : 2]<UL><LI> timedate.o(i.mTimeDateOpen)
<LI> timedate.o(i.endSelect)
</UL>
<P><STRONG><a name="[4b]"></a>mSelect</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, timedate.o(i.mSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = mSelect &rArr; setPrevMenuExit
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setPrevMenuExit
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exitSelected
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;doAction
</UL>
<BR>[Address Reference Count : 3]<UL><LI> timedate.o(i.mTimeDateOpen)
<LI> timedate.o(i.beginSelect)
<LI> timedate.o(i.endSelect)
</UL>
<P><STRONG><a name="[56]"></a>mUp</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, timedate.o(i.mUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mUp
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prevOption
</UL>
<BR>[Address Reference Count : 2]<UL><LI> timedate.o(i.mTimeDateOpen)
<LI> timedate.o(i.endSelect)
</UL>
<P><STRONG><a name="[63]"></a>saveTimeDate</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, timedate.o(i.saveTimeDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = saveTimeDate &rArr; time_set &rArr; Set_PCF8563_date &rArr; writeData &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnMasterAddressFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appconfig_save
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timedate.o(i.itemLoader)
</UL>
<P><STRONG><a name="[61]"></a>selectDate</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, timedate.o(i.selectDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = selectDate &rArr; endSelect &rArr; setMenuFuncs
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;endSelect
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginSelect
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_monthDayCount
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_dow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timedate.o(i.itemLoader)
</UL>
<P><STRONG><a name="[62]"></a>selectTime</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, timedate.o(i.selectTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = selectTime &rArr; endSelect &rArr; setMenuFuncs
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_timeMode
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;endSelect
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beginSelect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timedate.o(i.itemLoader)
</UL>
<P><STRONG><a name="[4c]"></a>timeDataDown</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, timedate.o(i.timeDataDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timeDataDown
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getMaxValForSetting
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timedate.o(i.beginSelect)
</UL>
<P><STRONG><a name="[4a]"></a>timeDataUp</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, timedate.o(i.timeDataUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timeDataUp
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getMaxValForSetting
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timedate.o(i.beginSelect)
</UL>
<P><STRONG><a name="[4d]"></a>timeDateDraw</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, timedate.o(i.timeDateDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = timeDateDraw &rArr; draw_string &rArr; draw_bitmap
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_string
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_clearArea
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timedate.o(i.beginSelect)
</UL>
<P><STRONG><a name="[146]"></a>next</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, tune.o(i.next))
<BR><BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tune_play
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;next
</UL>

<P><STRONG><a name="[f2]"></a>_fp_digits</STRONG> (Thumb, 366 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[e7]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>

<P><STRONG><a name="[f5]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[f4]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[3d]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> printfa.o(i.__0sprintf)
<LI> printfa.o(i.__0vsprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
